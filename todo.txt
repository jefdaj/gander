bugs:
  edited 'folder1/folder2/file2.txt/file2.txt' (a86b253f)
  messed up root path to the annex (includes /.git at the end)
  when `annex hash`ing, need to remove the annex dir itself from path before building tree
    tree is already written that way
    ok after first init step
    but broken after annex add backup
    gander <annex> hash can fix it by updating hashes properly

proper testing:
  start with an actual dir of user-provided files we're allowed to mess up
  read the tree
  generate random deltas, simulate their results, and check that running them matches

sane dir hashes format: hash of sorted hashes of all entries separated by newlines

x hashes.txt should not be included in itself
shouldn't use the top level dir name, only the forest of thngs hashed?
annexing new files always fails?
how to handle adding other annexes? copy links, ignore the hidden stuff

better hashing:
  should be fast to verify dir hashes when reading the tree right? might prevent file editing mistakes
  should there be a third L type for symlinks?

bugs to fix:
  dir hashes need to be recalculated after changing contents (including rm)
  have to handle "permission denied" errors? maybe just abort and make user have sudo

simplify the interface:
  gander hash  <target> [-e <exclude>]
  gander dupes <target> [-e <exclude>]
  gander dedup <target> [-e <exclude>] [-fc]
  gander diff  <oldtarget> <newtarget> [-e <exclude>]
  gander test  <testdir>
  gander <annex> init
  gander <annex> hash  [<path>] [-f]
  gander <annex> dupes [<path>]
  gander <annex> dedup [<path>] [-fc]
  gander <annex> add    <path>  [-s <srcpath>] [-fc]
  gander <annex> rm     <path>  [-fc]

minor features to add if time:
  make sure dir listings are alphabetical (probably are already)
  warning when you use potentially destructive standalone commands in an annex
  warning if it looks like you're trying to delete the root dir!
