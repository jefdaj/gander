The "Git ANnex DEdupeR" deduplicates files and folders using git-annex.

Usage:
  gander hash   [-v]  <path>
  gander dupes  [-v]  <hashes>
  gander fsck   [-v]  <hashes> [<dir>...]
  gander diff   [-v]  <hashes1> <hashes2> [<dir1> <dir2>]
  gander update [-vf] <oldhashes> <newhashes>...
  gander add    [-vf] <dest> <paths>...
  gander remove [-vf] <hashes> <path>

Options:
  -f, --force    Change existing files without requiring confirmation.
  -v, --verbose  Explain each step as it runs.

Commands:
  hash    Reads files + folders and prints their hashes to stdout.
  dupes   List duplicate files + folders in <hashes>.
  fsck    Re-read one or more paths and make sure their hashes are correct.
          <dir> limits it to one or more subdirectories.
  diff    Compare two sets of hashes for differences. <dir>s limit comparison
          to subdirectories.
  add     Copies each <path> into <dest> and `git annex add`s it.
          <dest> needs to be in an annex, of course. See examples for syntax.
  remove  `git rm` a path after checking that all files in it are duplicates.
          Prompts to confirm unless `--force`d.
  update  Updates <oldhashes> with new hashes for one or more subdirectories.

Examples:

  gander add /media/jeff/dedup/unsorted/mybook "/media/jeff/WD My Book/" -v

  Copy the contents of "/media/jeff/WD My Book" to
  /media/jeff/dedup/unsorted/mybook and annex it, deduping files in the process.
  Includes hidden files. Note that without the trailing slash the "WD My Book"
  folder would end up *inside* mybook (rsync syntax).

  gander hash "/media/jeff/WD My Book"           > mybook-orig-hashes.txt
  gander hash  /media/jeff/dedup/unsorted/mybook > mybook-annexed-hashes.txt
  gander diff mybook-{orig,annexed}-hashes.txt

  Hash the original files and their annexed equivalents to double-check that
  they were copied faithfully.
