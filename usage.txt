The "Git ANnex DEdupeR" deduplicates files and folders using git-annex.

Usage:
  gander [-v]  hash   <path> [-e <exclude>]
  gander [-v]  diff   <old> <new>
  gander [-v]  dupes  <hashes>
  gander [-vf] annex  <src> <dest>
  gander [-vf] rm     <target> <rootpath> <rmpath>
  gander [-vf] tmprm  <rmpath>
  gander [-vf] update <main> <sub> <path>
  gander [-v]  test   <path>
  gander [-v]  dedup  <hashes> <path>
  gander <annex> init  [-v]
  gander <annex> hash  [-v]
  gander <annex> dupes [-v]

Options:
  <annex>        Operate on the given git-annex repository.
  -f, --force    Change existing files without requiring confirmation.
  -v, --verbose  Explain each step as it runs.
  -e <exclude>   Read a list of globs and exclude any files matching it.
                 If none given, the list defaults to [".git*"]

Standalone commands:
  hash    Reads files + folders and prints their hashes to stdout.
  dupes   List duplicate files + folders in <hashes>.
  diff    Print changes in <new> relative to <old>. TODO take hashes here too!
  annex   Copies each <src> to <dest>, annexes <dest>, and checks that hashes match.
  rm      `git rm` a path after checking that all files in it are duplicates.
          Prompts to confirm unless `--force`d. <target> is the hashes file or dir to hash,
          <rootpath> is where to read hash paths from, and <rmpath> is the one to delete.
  update  Updates <main> hashes with new ones from <sub>, inserted at <path>.
  dedup   Prompt to delete groups of duplicates, starting with the largest dirs.
          <hashes> is a file listing all hashes in the repo, and <path> is the
          system path to the repo.
          TODO allow deduping only a subdirectory?

Annex-based commands:
  init    Sets up the <annex> repository for use with the other annex-based commands.
  hash    Updates hashes.txt to reflect current annex content.
  dupes   List duplicate files + folders in <annex>/hashes.txt.

Test commands:
  test    Run tests on a given directory.
  tmprm   A temporary version of rm for testing. Assumes conventions which will be explicit
          in annex mode: path to rm is inside annex, hashes are stored
          in ANNEX_ROOT/.git/gander/hashes.txt.

Examples:

  gander annex "/media/jeff/WD My Book/" /media/jeff/dedup/unsorted/mybook -v

  Copy the contents of "/media/jeff/WD My Book" to
  /media/jeff/dedup/unsorted/mybook and annex it, deduping files in the process.
  Includes hidden files. Note that without the trailing slash the "WD My Book"
  folder would end up *inside* mybook (rsync syntax).

  gander hash "/media/jeff/WD My Book"           > mybook-orig-hashes.txt
  gander hash  /media/jeff/dedup/unsorted/mybook > mybook-annexed-hashes.txt
  gander diff mybook-{orig,annexed}-hashes.txt

  Hash the original files and their annexed equivalents to double-check that
  they were copied faithfully.
